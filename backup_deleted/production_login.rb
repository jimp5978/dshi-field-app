#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'bundler/setup'
require 'sinatra'
require 'webrick'
require 'jwt'
require 'net/http'
require 'json'
require 'uri'
require 'digest'

# Sinatra ÏÑ§Ï†ï
enable :sessions
set :session_secret, 'your-super-secret-session-key-change-this-in-production-must-be-at-least-64-characters-long-for-security'
set :port, 5005
set :bind, '0.0.0.0'

# Flask API ÏÑúÎ≤Ñ URL (Ïö¥ÏòÅ ÏÑúÎ≤Ñ)
FLASK_API_URL = 'http://203.251.108.199:5001'

# SHA256 Ìï¥Ïãú Ìï®Ïàò
def sha256_hash(password)
  Digest::SHA256.hexdigest(password)
end

# Ïã§Ï†ú Flask API Î°úÍ∑∏Ïù∏ Ìï®Ïàò
def flask_login(username, password)
  # ÌèâÎ¨∏ Ìå®Ïä§ÏõåÎìúÎ•º SHA256ÏúºÎ°ú Ìï¥Ïãú
  password_hash = sha256_hash(password)
  
  puts "Î°úÍ∑∏Ïù∏ ÏãúÎèÑ:"
  puts "- ÏÇ¨Ïö©ÏûêÎ™Ö: #{username}"
  puts "- ÌèâÎ¨∏ Ìå®Ïä§ÏõåÎìú: #{password}"
  puts "- SHA256 Ìï¥Ïãú: #{password_hash}"
  
  begin
    uri = URI("#{FLASK_API_URL}/api/login")
    http = Net::HTTP.new(uri.host, uri.port)
    http.open_timeout = 10
    http.read_timeout = 10
    
    request = Net::HTTP::Post.new(uri)
    request['Content-Type'] = 'application/json'
    request.body = {
      username: username,
      password_hash: password_hash  # Ìï¥ÏãúÎêú Ìå®Ïä§ÏõåÎìú Ï†ÑÏÜ°
    }.to_json
    
    puts "API ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞: #{request.body}"
    
    response = http.request(request)
    puts "API ÏùëÎãµ: #{response.code} - #{response.body}"
    
    if response.code == '200'
      data = JSON.parse(response.body)
      if data['success']
        {
          success: true,
          token: data['token'],
          user: data['user']
        }
      else
        {
          success: false,
          error: data['message'] || 'Î°úÍ∑∏Ïù∏ Ïã§Ìå®'
        }
      end
    else
      # HTTP ÏóêÎü¨ ÏÉÅÌÉú ÏΩîÎìúÎ≥Ñ ÏÇ¨Ïö©Ïûê ÏπúÌôîÏ†Å Î©îÏãúÏßÄ Ï≤òÎ¶¨
      error_message = case response.code
                     when '401'
                       'ÏïÑÏù¥Îîî ÎòêÎäî ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî'
                     when '403'
                       'Ï†ëÍ∑º Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§'
                     when '404'
                       'ÏÑúÎ≤ÑÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§'
                     when '500'
                       'ÏÑúÎ≤Ñ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§'
                     when '503'
                       'ÏÑúÎ≤ÑÍ∞Ä ÏùºÏãúÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§'
                     else
                       'Î°úÍ∑∏Ïù∏ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§'
                     end
      
      # JSON ÏùëÎãµÏóêÏÑú Îçî Íµ¨Ï≤¥Ï†ÅÏù∏ ÏóêÎü¨ Î©îÏãúÏßÄÍ∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏
      begin
        if response.body && !response.body.empty?
          data = JSON.parse(response.body)
          if data['message'] && !data['message'].empty?
            error_message = data['message']
          end
        end
      rescue JSON::ParserError
        # JSON ÌååÏã± Ïã§Ìå® Ïãú Í∏∞Î≥∏ Î©îÏãúÏßÄ ÏÇ¨Ïö©
      end
      
      {
        success: false,
        error: error_message
      }
    end
  rescue => e
    puts "Î°úÍ∑∏Ïù∏ API Ïó∞Í≤∞ Ïã§Ìå®: #{e.message}"
    {
      success: false,
      error: "ÏÑúÎ≤ÑÏóê Ïó∞Í≤∞Ìï† Ïàò ÏóÜÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî."
    }
  end
end

# ÎùºÏö∞Ìä∏
get '/login' do
  erb :production_login
end

get '/' do
  if session[:logged_in]
    user = session[:user_info] || {}
    erb :dashboard, locals: { user: user }
  else
    redirect '/login'
  end
end

post '/login' do
  username = params[:username]
  password = params[:password]
  
  puts "\n=== Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠ ==="
  puts "ÏÇ¨Ïö©ÏûêÎ™Ö: #{username}"
  puts "Ìå®Ïä§ÏõåÎìú: #{password}"
  
  # Ïã§Ï†ú Flask APIÎ°ú Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠
  result = flask_login(username, password)
  
  if result[:success]
    session[:logged_in] = true
    session[:jwt_token] = result[:token]
    session[:user_info] = result[:user]
    redirect '/'
  else
    @error = result[:error]
    @username = username  # Ïã§Ìå® Ïãú ÏÇ¨Ïö©ÏûêÎ™Ö Ïú†ÏßÄ
    erb :production_login
  end
end

get '/logout' do
  session.clear
  redirect '/login'
end

# API ÏÑúÎ≤Ñ ÏÉÅÌÉú ÌôïÏù∏
get '/api/status' do
  begin
    uri = URI("#{FLASK_API_URL}/health")
    http = Net::HTTP.new(uri.host, uri.port)
    http.open_timeout = 5
    http.read_timeout = 5
    
    response = http.request(Net::HTTP::Get.new(uri))
    
    content_type :json
    {
      flask_api_status: response.code == '200' ? 'online' : 'error',
      response_code: response.code,
      response_body: response.body,
      flask_url: FLASK_API_URL
    }.to_json
  rescue => e
    content_type :json
    {
      flask_api_status: 'offline',
      error: e.message,
      flask_url: FLASK_API_URL
    }.to_json
  end
end

# Ìå®Ïä§ÏõåÎìú Ìï¥Ïãú ÌÖåÏä§Ìä∏ ÎèÑÍµ¨
get '/hash-test' do
  test_passwords = {
    'hello' => sha256_hash('hello'),
    'password123' => sha256_hash('password123'),
    'admin' => sha256_hash('admin')
  }
  
  content_type :json
  test_passwords.to_json
end

# HTML ÌÖúÌîåÎ¶ø
__END__

@@production_login
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ARUP ECS - Production Î°úÍ∑∏Ïù∏</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .login-container {
            background: white;
            border-radius: 10px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            padding: 40px;
            width: 100%;
            max-width: 450px;
        }
        
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .logo h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 10px;
        }
        
        .logo p {
            color: #666;
            font-size: 14px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
            font-weight: 500;
        }
        
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .btn-login {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .btn-login:hover {
            transform: translateY(-2px);
        }
        
        .error-message {
            background: #ffe6e6;
            border: 1px solid #ffb3b3;
            color: #d32f2f;
            padding: 10px 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
            font-size: 14px;
        }
        
        
        
        
        .footer {
            text-align: center;
            margin-top: 20px;
            color: #999;
            font-size: 12px;
        }
        
        .footer a {
            color: #667eea;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">
            <h1>üè≠ DSHI</h1>
            <p>DSHI Î°úÍ∑∏Ïù∏ ÏãúÏä§ÌÖú</p>
        </div>




        <% if @error %>
            <div class="error-message">
                <%= @error %>
            </div>
        <% end %>

        <form method="post" action="/login">
            <div class="form-group">
                <label for="username">ID</label>
                <input type="text" id="username" name="username" value="<%= @username %>" required placeholder="ID ÏûÖÎ†•">
            </div>

            <div class="form-group">
                <label for="password">ÎπÑÎ∞ÄÎ≤àÌò∏</label>
                <input type="password" id="password" name="password" required placeholder="ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•">
            </div>

            <button type="submit" class="btn-login">Î°úÍ∑∏Ïù∏</button>
        </form>

        <div class="footer">
            <p>&copy; 2025 DSHI RPA System</p>
        </div>
    </div>

    <script>

        // Ìèº Ï†úÏ∂ú Ïãú Î°úÎî© ÏÉÅÌÉú
        document.querySelector('form').addEventListener('submit', function() {
            const submitBtn = document.querySelector('.btn-login');
            submitBtn.textContent = 'Î°úÍ∑∏Ïù∏ Ï§ë...';
            submitBtn.disabled = true;
        });

        // ÏÇ¨Ïö©ÏûêÎ™Ö ÌïÑÎìúÏóê Ìè¨Ïª§Ïä§
        window.addEventListener('load', function() {
            const usernameField = document.getElementById('username');
            // Í∏∞Î≥∏Í∞í ÏóÜÏù¥ Ìè¨Ïª§Ïä§Îßå
            usernameField.focus();
            usernameField.select();
        });
    </script>
</body>
</html>

@@dashboard
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ARUP ECS - Dashboard</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: #f5f5f5;
        }
        .header {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .user-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .user-details {
            font-size: 18px;
            color: #333;
        }
        .permission-badge {
            padding: 5px 15px;
            border-radius: 20px;
            color: white;
            font-weight: bold;
        }
        .level-1 { background: #4caf50; }
        .level-3 { background: #ff9800; }
        .level-4 { background: #2196f3; }
        .level-5 { background: #9c27b0; }
        .logout-btn {
            background: #f44336;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
        }
        .welcome-message {
            background: white;
            padding: 30px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .welcome-message h1 {
            color: #333;
            margin-bottom: 20px;
        }
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        .feature-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .feature-card h3 {
            color: #667eea;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="user-info">
            <div class="user-details">
                ÏïàÎÖïÌïòÏÑ∏Ïöî, <strong><%= user['full_name'] || user['username'] %></strong>Îãò!
                <span class="permission-badge level-<%= user['permission_level'] %>">
                    Level <%= user['permission_level'] %>
                </span>
            </div>
            <a href="/logout" class="logout-btn">Î°úÍ∑∏ÏïÑÏõÉ</a>
        </div>
    </div>

    <div class="welcome-message">
        <h1>üéâ Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!</h1>
        <p>ARUP ECS ÏãúÏä§ÌÖúÏóê ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Î°úÍ∑∏Ïù∏ÌñàÏäµÎãàÎã§.</p>
        <p>JWT ÌÜ†ÌÅ∞Ïù¥ Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Î∞úÍ∏âÎêòÏóàÏúºÎ©∞, 24ÏãúÍ∞Ñ ÎèôÏïà Ïú†Ìö®Ìï©ÎãàÎã§.</p>
        
        <div class="features">
            <div class="feature-card">
                <h3>üîç Ï°∞Î¶ΩÌíà Í≤ÄÏÉâ</h3>
                <p>5,758Í∞úÏùò Ï°∞Î¶ΩÌíà Îç∞Ïù¥ÌÑ∞Î•º Í≤ÄÏÉâÌïòÍ≥† Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.</p>
            </div>
            
            <div class="feature-card">
                <h3>üìã Í≤ÄÏÇ¨Ïã†Ï≤≠</h3>
                <p>8Îã®Í≥Ñ Í≥µÏ†ïÏùò Í≤ÄÏÇ¨Î•º Ïã†Ï≤≠ÌïòÍ≥† ÏäπÏù∏ Í≥ºÏ†ïÏùÑ Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.</p>
            </div>
            
            <div class="feature-card">
                <h3>üìä Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù</h3>
                <p>Ïã§ÏãúÍ∞Ñ ÏßÑÌñâÎ•†Í≥º ÌÜµÍ≥ÑÎ•º ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§.</p>
            </div>
            
            <% if user['permission_level'] >= 5 %>
            <div class="feature-card">
                <h3>üë• ÏÇ¨Ïö©Ïûê Í¥ÄÎ¶¨</h3>
                <p>Level 5+ Í∂åÌïúÏúºÎ°ú ÏÇ¨Ïö©ÏûêÎ•º ÏÉùÏÑ±ÌïòÍ≥† Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.</p>
            </div>
            <% end %>
        </div>
    </div>
</body>
</html>